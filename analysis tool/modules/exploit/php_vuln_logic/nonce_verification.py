from django.utils.crypto import constant_time_compare

def sanitize_input(value):
    """입력값을 안전하게 정리하는 함수"""
    return value.strip() if value else ''

def verify_nonce(nonce, action):
    """Nonce 검증 함수"""
    if not nonce:
        return False
    expected_nonce = f"expected_nonce_value_for_{action}"  # 실제 환경에서는 DB 또는 세션에서 비교
    return constant_time_compare(nonce, expected_nonce)

def is_admin(user):
    """사용자가 관리자 권한을 가지고 있는지 확인"""
    return user.get("role") == "admin" if user else False

def validate_request(request, user):
    """WordPress 스타일의 요청 검증 함수"""
    
    # 1️⃣ 관리자 권한 검증
    if not is_admin(user):
        return False, "Unauthorized: Admin access required"

    # 2️⃣ Nonce 값 가져오기 및 검증
    file_nonce = sanitize_input(request.POST.get('file_nonce'))
    export_nonce = sanitize_input(request.POST.get('export_nonce'))
    security_nonce = sanitize_input(request.POST.get('security'))
    
    is_valid_file_nonce = file_nonce and verify_nonce(file_nonce, "import")
    is_valid_export_nonce = export_nonce and verify_nonce(export_nonce, "export")
    is_valid_ajax_nonce = security_nonce and verify_nonce(security_nonce, "af_link_additional_settings")

    # 3️⃣ 위젯 관련 요청 검증
    widget_id = sanitize_input(request.POST.get('id'))
    widget_token = sanitize_input(request.POST.get('widget_token'))
    nonce = sanitize_input(request.POST.get('nonce'))
    
    is_valid_widget_request = (
        widget_id and widget_token and
        nonce and verify_nonce(nonce, "wp_cx_nonce") and 
        verify_nonce(widget_token, f"widget_token_{widget_id}")
    )

    # 4️⃣ 요청 검증 로직 (WordPress 스타일)
    if is_valid_file_nonce and 'file' in request.files:
        return True, "✅ File upload request verified"

    if is_valid_export_nonce:
        return True, "✅ Export request verified"

    if is_valid_ajax_nonce:
        return True, "✅ Ajax request verified"

    if is_valid_widget_request:
        return True, "✅ Widget request verified"

    return False, "❌ Permission denied"
